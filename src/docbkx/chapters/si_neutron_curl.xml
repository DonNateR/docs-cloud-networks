<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % common  SYSTEM "../../common/common.ent">
%common;
]>
<section xml:id="si_neutron_curl" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:raxm="http://docs.rackspace.com/api/metadata" version="5.0">
    <title>Share IP address with cURL</title>
    <para>These sections walk you through creating a shared IP address and attached it to two existing servers or two new
        servers by using cURL.</para>
    <para>Once the steps are completed, there will be a shared IP address common to 2 servers in the control plane. However,
        you will still need to configure the guest on the servers, perhaps an application like Linux-HA or VRRP, to take
        advantage of the shared IP during a failover.</para>
    <sidebar>
        <para><emphasis role="bold">If you need to create servers, start here:
            </emphasis><link xlink:href="nova_create_serverA_curl.html">Create server A (cURL)</link>
        </para>
        <para><emphasis role="bold">If you already have two active servers, start here:
            </emphasis><link xlink:href="nova_verify_servers_zone_curl.html">Verify servers share <literal>publicIPZoneId</literal> (cURL)</link>
        </para>
    </sidebar>

    <section xml:id="nova_create_serverA_curl">
        <title>Create server A (cURL)</title>
        <para>Create the first server by using the standard Nova boot process.</para>
        <procedure>
            <title>To create server A</title>
            <step>
                <para>Issue the following cURL command, substituting your own values for the ones shown:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -i -vv https://dfw.servers.api.rackspacecloud.com/v2/$account/servers
       -X POST \
       -H "Content-Type: application/json" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" \
       -d '{"server": {"name": "serverA", "imageRef": "2f85a777-9ffd-4b49-a60e-1155ceb93a5e", "flavorRef": "4", "max_count": 1, "min_count": 1, "networks": [{"uuid": "00000000-0000-0000-0000-000000000000"}, {"uuid": "11111111-1111-1111-1111-111111111111"}]}}' | python -m json.tool</programlisting></para>
                <para>In this cURL command, you specify several options. For information about the options, see
                    <link xlink:href="curl.html#curl_options">cURL command-line options</link>.</para>
                <para>The operation returns the response body, as shown in the following example:
                    <programlisting language="json"><?db-font-size 65%?>
{
    "server": {
        "OS-DCF:diskConfig": "AUTO", 
        "id": "f387799f-9668-4cc7-9f0f-03c9cfc43af6", 
        "links": [
            {
                "href": "https://dfw.servers.api.rackspacecloud.com/v2/5831008/servers/f387799f-9668-4cc7-9f0f-03c9cfc43af6", 
                "rel": "self"
            }, 
            {
                "href": "https://dfw.servers.api.rackspacecloud.com/5831008/servers/f387799f-9668-4cc7-9f0f-03c9cfc43af6", 
                "rel": "bookmark"
            }
        ], 
        "adminPass": "27L93SfBWttf"
    }
}
                            </programlisting></para>
            </step>
            <step>
                <para>Copy the <literal>id</literal> value from the output. You will need this value when you performing
                    other related activities. In this example, the ID is
                        <literal>f387799f-9668-4cc7-9f0f-03c9cfc43af6</literal>, but use the ID from your response.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step:
                </emphasis><link xlink:href="nova_get_serverA_zone_curl.html">Get server A <literal>publicIPZoneId</literal> (cURL)</link>
            </para>
        </sidebar>
    </section>

    <section xml:id="nova_get_serverA_zone_curl">
        <title>Get server A <literal>publicIPZoneId</literal> (cURL)</title>
        <para>In order to share a public IP address, the servers have to be in the same <literal>publicIPZoneId</literal>. To
            determine the server's <literal>publicIPZoneId</literal>, perform the GET server details operation and find the
                <literal>RAX-PUBLIC-IP-ZONE-ID:publicIPZoneId</literal> attribute. </para>
        <note>
            <para>If you want to share a Cloud Networks (or isolated network) address, the servers do not need to be in the
                same <literal>publicIPZoneId</literal>.</para>
        </note>
        <procedure>
            <title>To find server A <literal>publicIPZoneId</literal></title>
            <step>
                <para>Issue the following cURL command, substituting your own values for the ones shown:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -s https://dfw.servers.api.rackspacecloud.com/v2/$account/servers/f387799f-9668-4cc7-9f0f-03c9cfc43af6 \
       -X GET \
       -H "Content-Type: application/json" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" | python -m json.tool</programlisting></para>
                <para>In this cURL command, you specify several options. For information about the options, see
                    <link xlink:href="curl.html#curl_options">cURL command-line options</link>.</para>
                <para>The operation returns the response body, as shown in the following example:
                    <programlisting language="json"><?db-font-size 65%?>
{
    "server": {
        "OS-DCF:diskConfig": "AUTO", 
        "OS-EXT-STS:power_state": 1, 
        "OS-EXT-STS:task_state": null, 
        "OS-EXT-STS:vm_state": "active", 
        "RAX-PUBLIC-IP-ZONE-ID:publicIPZoneId": "85013d5f5100b7b903bc99c3a333d9af01ecd4b4f0df970a2c27a796", 
        "accessIPv4": "166.78.9.96", 
        "accessIPv6": "2001:4800:7810:512:b8bd:1f9c:ff05:339e",  
        ...
        "id": "f387799f-9668-4cc7-9f0f-03c9cfc43af6",
        ...
    }
}
                            </programlisting></para>
            </step>
            <step>
                <para>Note the server id, in this case <literal>f387799f-9668-4cc7-9f0f-03c9cfc43af6</literal> and the
                        <literal>RAX-PUBLIC-IP-ZONE-ID:publicIPZoneId</literal> value, in this example
                        <literal>85013d5f5100b7b903bc99c3a333d9af01ecd4b4f0df970a2c27a796</literal>.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step:
                </emphasis><link xlink:href="nova_create_serverB_curl.html">Create server B (cURL)</link>
            </para>
        </sidebar>
    </section>

    <section xml:id="nova_create_serverB_curl">
        <title>Create server B (cURL)</title>
        <para>The following step shows you how create server B in the same <literal>publicIPZoneId</literal> as server A, by
            using a scheduler hint to direct the service to create server B near to server A
                (<literal>f387799f-9668-4cc7-9f0f-03c9cfc43af6</literal>).</para>
        <procedure>
            <title>To create server B</title>
            <step>
                <para>Issue the following cURL command, substituting your own values for the ones shown:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -i -vv https://dfw.servers.api.rackspacecloud.com/v2/$account/servers
       -X POST \
       -H "Content-Type: application/json" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" \
       -d '{"server": {"name": "serverB", "os:scheduler_hints": {"public_ip_zone:near": ["f387799f-9668-4cc7-9f0f-03c9cfc43af6"]},"imageRef": "2f85a777-9ffd-4b49-a60e-1155ceb93a5e", "flavorRef": "4", "max_count": 1, "min_count": 1, "networks": [{"uuid": "00000000-0000-0000-0000-000000000000"}, {"uuid": "11111111-1111-1111-1111-111111111111"}]}}' | python -m json.tool</programlisting></para>
                <para>In this cURL command, you specify several options. For information about the options, see
                    <link xlink:href="curl.html#curl_options">cURL command-line options</link>.</para>
                <para>The operation returns the response body as shown in the following example:
                    <programlisting language="json"><?db-font-size 75%?>
{
    "server": {
        "OS-DCF:diskConfig": "AUTO", 
        "id": "1a861bf7-2a5e-40a4-acb3-1fb058cf2a74", 
        "links": [
            {
                "href": "https://dfw.servers.api.rackspacecloud.com/v2/5831008/servers/1a861bf7-2a5e-40a4-acb3-1fb058cf2a74", 
                "rel": "self"
            }, 
            {
                "href": "https://dfw.servers.api.rackspacecloud.com/5831008/servers/1a861bf7-2a5e-40a4-acb3-1fb058cf2a74", 
                "rel": "bookmark"
            }
        ], 
        "adminPass": "42L12DfA13sd"
    }
}
                        </programlisting>
                </para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="nova_verify_servers_zone_curl.html">Verify servers share <literal>publicIPZoneId</literal> (cURL)</link>
            </para>
        </sidebar>
    </section>

    <section xml:id="nova_verify_servers_zone_curl">
        <title>Verify servers share <literal>publicIPZoneId</literal> (cURL)</title>
        <para>The following steps show you how to verify that both servers are in the same <literal>publicIPZoneId</literal>
            using cURL.</para>
        <procedure>
            <title>To verify servers share the same <literal>publicIPZoneId</literal></title>
            <step>
                <para>Issue the following cURL command twice, once for each server id, substituting your own values for
                    server A and server B for the ones shown. This example is for server B.
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -s https://dfw.servers.api.rackspacecloud.com/v2/$account/servers/1a861bf7-2a5e-40a4-acb3-1fb058cf2a74 \
       -X GET \
       -H "Content-Type: application/json" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" | python -m json.tool</programlisting></para>
                <para>In this cURL command, you specify several options. For information about the options, see
                    <link xlink:href="curl.html#curl_options">cURL command-line options</link>.</para>
                <para>The operation returns the response body as shown in the following example:
                    <programlisting language="json"><?db-font-size 75%?>
{
    "server": {
        "OS-DCF:diskConfig": "AUTO", 
        ...
        "RAX-PUBLIC-IP-ZONE-ID:publicIPZoneId": "85013d5f5100b7b903bc99c3a333d9af01ecd4b4f0df970a2c27a796",  
        ...
        "id": "1a861bf7-2a5e-40a4-acb3-1fb058cf2a74",
        ...
    }
}
                        </programlisting>
                </para>
            </step>
            <step>
                <para>Make sure the <literal>RAX-PUBLIC-IP-ZONE-ID:publicIPZoneId</literal> value is the same for both server
                    A and server B.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next topic:
                </emphasis><link xlink:href="neutron_show_ports_curl.html">Show server ports (cURL)</link>
            </para>
        </sidebar>
    </section>

    <section xml:id="neutron_show_ports_curl">
        <title>Show server ports (cURL)</title>
        <para>The following steps show you how to identify the public IP port IDs for both servers.</para>
        <procedure>
            <title>To show a port</title>
            <step>
                <para>Issue the following cURL command for server A, where the value for device_id is your server A ID:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -s https://dfw.networks.api.rackspacecloud.com/v2.0/ports?device_id=f387799f-9668-4cc7-9f0f-03c9cfc43af6 \
       -X GET \
       -H "Content-Type: application/json" \
       -H "User-Agent: python-novaclient" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" | python -m json.tool</programlisting></para>
                <para>The operation returns the response body, as shown in the following example:
                    <programlisting language="json"><?db-font-size 65%?>
{
  "ports_links": [
    {
      "href": "http://localhost:9696/v2.0/ports?device_id=f387799f-9668-4cc7-9f0f-03c9cfc43af6&amp;marker=ad88326b-b232-45e8-9fe6-ff0618ff5de6&amp;page_reverse=True",
      "rel": "previous"
    }
  ],
  "ports": [
    {
      "status": "ACTIVE",
      "name": "",
      "admin_state_up": true,
      "network_id": "00000000-0000-0000-0000-000000000000",
      "tenant_id": "1234567",
      "device_owner": "compute:None",
      "mac_address": "BC:76:4E:05:39:80",
      "fixed_ips": [
        {
          "subnet_id": "00ef42bd-5d9c-45f7-8f8a-07660ca17418",
          "ip_address": "2001:4800:7818:101:be76:4eff:fe05:3980"
        },
        {
          "subnet_id": "55a4df37-6aad-4bd7-85b7-7d30a884c595",
          "ip_address": "104.130.132.199"
        }
      ],
      "id": "ad88326b-b232-45e8-9fe6-ff0618ff5de6",
      "security_groups": [],
      "device_id": "f387799f-9668-4cc7-9f0f-03c9cfc43af6"
    },
    {
      "status": "ACTIVE",
      "name": "",
      "admin_state_up": true,
      "network_id": "11111111-1111-1111-1111-111111111111",
      "tenant_id": "1234567",
      "device_owner": "compute:None",
      "mac_address": "BC:76:4E:05:6E:0D",
      "fixed_ips": [
        {
          "subnet_id": "aaa8137b-d52e-43ee-887a-7fd066acd127",
          "ip_address": "10.208.232.222"
        }
      ],
      "id": "098994a6-898b-4d30-a123-31ab5dac220f",
      "security_groups": [],
      "device_id": "e2f6b206-278d-40e4-915e-cce62a171ac0"
    }
  ]
}
                            </programlisting></para>
            </step>
            <step>
                <para>Note the id value for the port where the network_id is
                        <literal>00000000-0000-0000-0000-000000000000</literal> for future reference. In this example, the ID
                    is <literal>ad88326b-b232-45e8-9fe6-ff0618ff5de6</literal>), but use the ID from your response.</para>
            </step>
            <step>
                <para>Repeat the GET /ports command (step 1 in this procedure) for server B, and note the port ID for that
                    server's public network.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="neutron_create_shared_ip_curl.html">Create shared IP address (cURL)</link></para>
        </sidebar>
    </section>

    <section xml:id="neutron_create_shared_ip_curl">
        <title>Create shared IP address (cURL)</title>
        <para>The following steps show you how create shared IP address for the Server A and B public network ports
            identified in the previous step.</para>
        <procedure>
            <title>To create a shared IP</title>
            <step>
                <para>Issue the following cURL command, using your port IDs and tenant ID:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -s https://dfw.networks.api.rackspacecloud.com/v2.0/ip_addresses \
       -X POST \
       -H "Content-Type: application/json" \
       -H "User-Agent: python-novaclient" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" \
       -d "{"ip_address":{"network_id": "00000000-0000-0000-0000-000000000000", "port_ids": ["ad88326b-b232-45e8-9fe6-ff0618ff5de6", "51ca694d-c60a-4162-8070-54b3385a7833"], "tenant_id": "1234567", "version": 4}}"
       | python -m json.tool</programlisting></para>
                <para>The operation returns the response body, as shown in the following example:
                    <programlisting language="json"><?db-font-size 65%?>
{
  "ip_address": {
    "subnet_id": "2ecd46c2-64a5-4d81-84a9-58536306c851",
    "version": 4,
    "address": "23.253.64.51",
    "network_id": "00000000-0000-0000-0000-000000000000",
    "tenant_id": "661145",
    "port_ids": [
            "ad88326b-b232-45e8-9fe6-ff0618ff5de6", 
            "51ca694d-c60a-4162-8070-54b3385a7833"
    ],
    "type": "shared",
    "id": "89875b4a-b098-414f-980a-5e9f89078a49"
  }
}
                            </programlisting></para>
            </step>
            <step>
                <para>Note the new shared IP address for future reference. In this example, the address is
                        <literal>23.253.64.51</literal>), but use the address from your response.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="neutron_associate_ip_to_servers_curl.html">Associate shared IP address to both servers (cURL)</link></para>
        </sidebar>
    </section>

    <section xml:id="neutron_associate_ip_to_servers_curl">
        <title>Associate shared IP address to both servers (cURL)</title>
        <para>The following steps show you how to explicitly associate the new shared IP address to server A and B.</para>
        <procedure>
            <title>To associate shared IP to server A</title>
            <step>
                <para>Issue the following cURL command, using your server A ID and shared IP address ID:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -s https://dfw.servers.api.rackspacecloud.com/v2/$account/servers/f387799f-9668-4cc7-9f0f-03c9cfc43af6/ip_associations/89875b4a-b098-414f-980a-5e9f89078a49 \
       -X PUT \
       -H "Content-Type: application/json" \
       -H "User-Agent: python-novaclient" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" | python -m json.tool</programlisting></para>
                <para>The operation returns the response body, as shown in the following example:
                    <programlisting language="json"><?db-font-size 65%?>
{
    "ip_associations": 
    [
        {
            "id": "1", 
            "address": "166.78.9.96"
        }, 
        {
            "id": "2", 
            "address": "23.253.64.51"
        }
    ]
}
                            </programlisting></para>
            </step>
            <step>
                <para>Repeat the process for server B.</para>
                <para>Issue the following cURL command, using your server B ID and shared IP address ID:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -s https://dfw.servers.api.rackspacecloud.com/v2/$account/servers/1a861bf7-2a5e-40a4-acb3-1fb058cf2a74/ip_associations/89875b4a-b098-414f-980a-5e9f89078a49 \
       -X PUT \
       -H "Content-Type: application/json" \
       -H "User-Agent: python-novaclient" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" | python -m json.tool</programlisting></para>
                <para>The operation returns the response body, as shown in the following example:
                    <programlisting language="json"><?db-font-size 65%?>
{
    "ip_associations": 
    [
        {
            "id": "1", 
            "address": "162.209.72.242"
        }, 
        {
            "id": "2", 
            "address": "23.253.64.51"
        }
    ]
}
                            </programlisting></para>
            </step>
        </procedure>
        <!--        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="neutron_verify_shared_ip_curl.html">Verify shared IP address (cURL)</link></para>
        </sidebar>-->
    </section>
    <!--<section xml:id="neutron_verify_shared_ip_curl">
        <title>Verify shared IP address (cURL)</title>
        <para>The following steps show you how verify that the shared IP address is set for the Server A and B public network
            ports.</para>
        <procedure>
            <title>To verify a shared IP</title>
            <step>
                <para>Issue the following cURL command, using your port IDs and tenant ID:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -s https://dfw.networks.api.rackspacecloud.com/v2.0/ip_addresses \
       -X GET \
       -H "Content-Type: application/json" \
       -H "User-Agent: python-novaclient" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" | python -m json.tool</programlisting></para>
                <para>The operation returns the response body, as shown in the following example:
                    <programlisting language="json"><?db-font-size 65%?>
{
  "ip_addresses": [
    {
      "subnet_id": "4707387f-e03d-4026-ab42-a44960e2c25e",
      "version": 4,
      "address": "10.182.1.134",
      "network_id": "11111111-1111-1111-1111-111111111111",
      "tenant_id": "661145",
      "port_ids": [
        "6899273a-6840-4875-9e26-e6c56c44ef25"
      ],
      "type": "fixed",
      "id": "82bb89ad-89dc-4cf7-a2ca-020869e33c08"
    },
    {
      "subnet_id": "2ecd46c2-64a5-4d81-84a9-58536306c851",
      "version": 4,
      "address": "23.253.64.51",
      "network_id": "00000000-0000-0000-0000-000000000000",
      "tenant_id": "661145",
      "port_ids": [
        "96924e21-127e-4460-9a14-8f9a74e4f0b1",
        "9d0db2d7-62df-4c99-80cb-6f140a5260e8"
      ],
      "type": "shared",
      "id": "89875b4a-b098-414f-980a-5e9f89078a49"
    },
    {
      "subnet_id": "c27b857f-3765-45bb-8fae-c6bec114259b",
      "version": 4,
      "address": "166.78.60.76",
      "network_id": "00000000-0000-0000-0000-000000000000",
      "tenant_id": "661145",
      "port_ids": [
        "9d0db2d7-62df-4c99-80cb-6f140a5260e8"
      ],
      "type": "fixed",
      "id": "8fbc0756-470b-4883-be03-4deaf0a6c465"
    }
  ]
}
                            </programlisting></para>
            </step>
            <step>
                <para>Note that both ports show up for the IP address you created. In this case, the sahred IP address is
                        <literal>23.253.64.51</literal> and both ports are listed.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="neutron_associate_servers_curl.html">Associate servers with shared IP address (cURL)</link></para>
        </sidebar>
    </section>-->
</section>
