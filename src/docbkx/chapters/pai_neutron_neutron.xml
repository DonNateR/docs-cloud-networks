<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
        <!-- Some useful entities borrowed from HTML -->
        <!ENTITY ndash  "&#x2013;">
        <!ENTITY mdash  "&#x2014;">
        <!ENTITY hellip "&#x2026;">
        
        <!-- Useful for describing APIs -->
        <!ENTITY GET    '<command xmlns="http://docbook.org/ns/docbook">GET</command>'>
        <!ENTITY PUT    '<command xmlns="http://docbook.org/ns/docbook">PUT</command>'>
        <!ENTITY POST   '<command xmlns="http://docbook.org/ns/docbook">POST</command>'>
        <!ENTITY DELETE '<command xmlns="http://docbook.org/ns/docbook">DELETE</command>'>
]>
<section xml:id="pai_neutron_neutron" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:raxm="http://docs.rackspace.com/api/metadata" version="5.0">
    <title>Provision a port with additional IP and dual-stack IPs with neutron client</title>
    <para>These sections walk you through provisioning an additional IP and dual-stack (v4 and v6) IP addresses on an
        isolated network port by using the neutron client.</para>
    <sidebar>
        <para><emphasis role="bold">Start here: </emphasis>
            <link xlink:href="neutron_show_v6_port_pai_neutron.html">Show port with IPv6 address (neutron client)</link></para>
    </sidebar>
    <section xml:id="neutron_show_v6_port_pai_neutron">
        <title>Show a port with an IPv6 address (neutron client)</title>
        <para>First, look at your port with an IPv6 IP address. In this example, note the fixed_ips ip_address of
                <literal>fc01::7</literal>, which is an IPv6 address in hexadecimal format.</para>
        <procedure>
            <title>To show a port</title>
            <step>
                <para>Issue the following neutron client command:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
                        <prompt>$</prompt> neutron port-list</programlisting></para>
                <para><emphasis role="bold">Output:</emphasis>
                </para>
                <para>The command returns the response, as shown in the following output:</para>
                <para><informalexample>
                        <screen><computeroutput>
+--------------------------------------+-------+-------------------+--------------------------------------------------------------------------------+
| id                                   | name  | mac_address       | fixed_ips                                                                      |
+--------------------------------------+-------+-------------------+--------------------------------------------------------------------------------+
| 79bf47e2-5107-4d93-b9c3-b78ddbc94c93 | port1 | AA:BB:CC:00:01:4A | {"subnet_id": "1d18d76b-a04a-4147-a04c-151630ec80d0", "ip_address": "fc01::7"} |
+--------------------------------------+-------+-------------------+--------------------------------------------------------------------------------+</computeroutput></screen>
                    </informalexample></para>
            </step>
            <step>
                <para>Note the id value for future reference. In this example, the ID is
                        <literal>79bf47e2-5107-4d93-b9c3-b78ddbc94c93</literal>), but use the ID from your response.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="neutron_get_network_cidr_pai_neutron.html">Get the IPv4 CIDR for the network (neutron
                    client)</link></para>
        </sidebar>
    </section>

    <section xml:id="neutron_get_network_cidr_pai_neutron">
        <title>Get the IPv4 CIDR for the network (neutron client)</title>
        <para>Now, note the IPv4 CIDR on the same network as the IPv6 CIDR. You should have already created this subnet on
            the same network. If you have not done so, create an IPv4 subnet (<command>create subnet</command>
            <parameter>subnet-name</parameter>) on the same network. Because this example assumes that the subnet has already
            been created, run the following command and note the CIDR to identify the IPv4 address.</para>
        <procedure>
            <title>To get the IPv4 CIDR of the matching network</title>
            <step>
                <para>Issue the following neutron client command:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
                        <prompt>$</prompt> neutron subnet-list</programlisting></para>
                <para><emphasis role="bold">Output:</emphasis></para>
                <para>For each subnet, the command returns the result as shown in the following output</para>
                <informalexample>
                    <screen><computeroutput><?db-font-size 75%?>
+--------------------------------------+------+----------------+----------------------------------------------------+
| id                                   | name | cidr           | allocation_pools                                   |
+--------------------------------------+------+----------------+----------------------------------------------------+
| 03f240c5-6fb8-47a0-860a-c7ba83be519f |      | 192.168.7.0/24 | {"start": "192.168.7.1", "end": "192.168.7.254"}   |
+--------------------------------------+------+----------------+----------------------------------------------------+</computeroutput></screen>
                </informalexample>
            </step>
            <step>
                <para>Note the network_id and CIDR values for future reference. In this example, the network_id is
                        <literal>03f240c5-6fb8-47a0-860a-c7ba83be519f</literal> and the CIDR is
                        <literal>192.168.7.0/24</literal>, but use the values from your response.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="neutron_add_v4_IP_pai_neutron.html">Add an IPv4 address on the same port (neutron
                client)</link></para>
        </sidebar>
    </section>

    <section xml:id="neutron_add_v4_IP_pai_neutron">
        <title>Add an IPv4 address on the same port (neutron client)</title>
        <para>Now, note the IPv4 CIDR on the same network as the IPv6 CIDR. You should have already created this subnet on
            the same network. If you have not done so, create an IPv4 subnet (<command>create subnet</command>
            <parameter>subnet-name</parameter>) on the same network. Because this example assumes that the subnet has already
            been created, run the following command and note the CIDR to identify the IPv4 address.</para>
        <procedure>
            <title>To get the IPv4 CIDR of the matching network</title>
            <step>
                <para>Issue the following neutron client command:</para>
                <para><emphasis role="bold">Positional argument:</emphasis></para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">fixed-ip</emphasis> The subnet IDs and IP addresses. In this example,
                                there are two:
                                    <literal>subnet_id=1d18d76b-a04a-4147-a04c-151630ec80d0,ip_address=fc01::7</literal> and
                                    <literal>subnet_id=03f240c5-6fb8-47a0-860a-c7ba83be519f,ip_address=192.168.7.250</literal>.</para>
                        </listitem>
                        <listitem>
                            <para>The port ID. In this example, we used the port ID
                                    <literal>79bf47e2-5107-4d93-b9c3-b78ddbc94c93</literal>.</para>
                        </listitem>
                    </itemizedlist>
                    <programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
                        <prompt>$</prompt> neutron port-update \
    --fixed-ip subnet_id=&lt;1d18d76b-a04a-4147-a04c-151630ec80d0,ip_address=fc01::7&gt; \
    --fixed-ip subnet_id=&lt;03f240c5-6fb8-47a0-860a-c7ba83be519f,ip_address=192.168.7.250&gt; \
    &lt;79bf47e2-5107-4d93-b9c3-b78ddbc94c93&gt;</programlisting></para>
                <para><emphasis role="bold">Output:</emphasis></para>
                <para>The command returns the result as shown in the following output</para>
                <informalexample>
                    <screen><computeroutput><?db-font-size 75%?>
+-----------------------+----------------------------------------------------------------------------------------+
| Field                 | Value                                                                                  |
+-----------------------+----------------------------------------------------------------------------------------+
| admin_state_up        | True                                                                                   |
| allowed_address_pairs |                                                                                        |
| device_id             |                                                                                        |
| device_owner          |                                                                                        |
| fixed_ips             | {"subnet_id": "1d18d76b-a04a-4147-a04c-151630ec80d0", "ip_address": "fc01::7"},        |
|                       | {"subnet_id": "321caa1c-2105-4186-b53b-366fa623c09a", "ip_address": "192.168.7.250"}   |
| id                    | 79bf47e2-5107-4d93-b9c3-b78ddbc94c93                                                   |
| mac_address           | AA:BB:CC:00:01:4A                                                                      |
| name                  | port1                                                                                  |
| network_id            | 03f240c5-6fb8-47a0-860a-c7ba83be519f                                                   |
| security_groups       |                                                                                        |
| status                | ACTIVE                                                                                 |
| tenant_id             | 53501b3c25d34f8ea293c03298caed60                                                       |
+-----------------------+----------------------------------------------------------------------------------------+</computeroutput></screen>
                </informalexample>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="neutron_show_both_port_pai_neutron.html">Show the port with both IP addresses (neutron
                    client)</link></para>
        </sidebar>
    </section>

    <section xml:id="neutron_show_both_port_pai_neutron">
        <title>Show the port with both IP addresses (neutron client)</title>
        <para>The following step shows you how to show port details to verify that both IPv4 and IPv6 IP addresses are
            configured by using the neutron client.</para>
        <procedure>
            <title>To show port details</title>
            <step>
                <para>Issue the following neutron client command.</para>
                <para>
                    <emphasis role="bold">Positional argument:</emphasis></para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>The port ID. In this example, we used the port ID
                                    <literal>79bf47e2-5107-4d93-b9c3-b78ddbc94c93</literal>.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para>
                    <programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
                        <prompt>$</prompt> neutron port &lt;79bf47e2-5107-4d93-b9c3-b78ddbc94c93&gt;</programlisting></para>
                <para><emphasis role="bold">Output:</emphasis></para>
                <para>The command returns the result as shown in the following output</para>
                <informalexample>
                    <screen><computeroutput><?db-font-size 75%?>
+-----------------------+----------------------------------------------------------------------------------------+
| Field                 | Value                                                                                  |
+-----------------------+----------------------------------------------------------------------------------------+
| admin_state_up        | True                                                                                   |
| allowed_address_pairs |                                                                                        |
| device_id             |                                                                                        |
| device_owner          |                                                                                        |
| fixed_ips             | {"subnet_id": "1d18d76b-a04a-4147-a04c-151630ec80d0", "ip_address": "fc01::7"},        |
|                       | {"subnet_id": "321caa1c-2105-4186-b53b-366fa623c09a", "ip_address": "192.168.7.250"}   |
| id                    | 79bf47e2-5107-4d93-b9c3-b78ddbc94c93                                                   |
| mac_address           | AA:BB:CC:00:01:4A                                                                      |
| name                  | port1                                                                                  |
| network_id            | 03f240c5-6fb8-47a0-860a-c7ba83be519f                                                   |
| security_groups       |                                                                                        |
| status                | ACTIVE                                                                                 |
| tenant_id             | 53501b3c25d34f8ea293c03298caed60                                                       |
+-----------------------+----------------------------------------------------------------------------------------+</computeroutput></screen>
                </informalexample>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="neutron_boot_server_pai_nova.html">Boot a Server (nova client)</link></para>
        </sidebar>
    </section>

    <section xml:id="neutron_boot_server_pai_nova">
        <title>Boot a Server (nova client)</title>
        <para>The following step shows you how to boot server with the nova client, using the network ID of the network you
            created in the first step of this procedure. You need the following information:</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para>The name of the new server. Use a name of your choice.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">image</emphasis> The image ID.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">flavor</emphasis> The flavor ID.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">nic</emphasis>The ID of the port, which is
                            <literal>port-id=79bf47e2-5107-4d93-b9c3-b78ddbc94c93</literal>. </para>
                </listitem>
            </itemizedlist>
        </para>
        <procedure>
            <title>To provision a server with a network</title>
            <step>
                <para>Issue the following nova client command:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 80%?>
<prompt>$</prompt> nova boot &lt;ata&gt; --image &lt;c63e20ad-6e3b-4e0b-943c-95cf3ba6c3a6&gt; /
                        --flavor &lt;2&gt; --nic port-id=&lt;79bf47e2-5107-4d93-b9c3-b78ddbc94c93&gt;</programlisting></para>

                <para>The operation returns information about the new server, as shown in the following example:</para>
                <para><informalexample>
                        <screen><computeroutput>
+-------------------------+-----------------------------------------------------------------+
| Property                | Value                                                           |
+-------------------------+-----------------------------------------------------------------+
| OS-DCF:diskConfig       | AUTO                                                            |
| OS-EXT-STS:power_state  | 0                                                               |
| OS-EXT-STS:task_state   | scheduling                                                      |
| OS-EXT-STS:vm_state     | building                                                        |
| accessIPv4              |                                                                 |
| accessIPv6              |                                                                 |
| adminPass               | LuXD49ijFf3D                                                    |
| created                 | 2014-02-06T20:05:12Z                                            |
| flavor                  | m1.mid (2)                                                      |
| hostId                  |                                                                 |
| id                      | 1ed5bc31-153d-4570-a361-92d5a02fd428                            |
| image                   | cirros-0.3.0-x86_64-disk (82e72de5-6366-4217-8c87-a570a9b17e73) |
| metadata                | {}                                                              |
| name                    | ata                                                             |
| progress                | 0                                                               |
| security_groups         | default                                                         |
| status                  | BUILD                                                           |
| tenant_id               | 5831008                                                         |
| updated                 | 2014-02-06T20:05:12Z                                            |
| user_id                 | 28be72f8fc5b45589c93f55274e459ce                                |
+-------------------------+-----------------------------------------------------------------+</computeroutput></screen>
                    </informalexample></para>
            </step>
            <step>
                <para>Copy the server id value from the output for future reference. In this example, the ID is
                        <literal>1ed5bc31-153d-4570-a361-92d5a02fd428</literal>, but use the ID from your response.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis>
                <link xlink:href="neutron_verify_ip_pai_nova.html">Verify the IP on the server port (nova client)</link></para>
        </sidebar>
    </section>

    <section xml:id="neutron_verify_ip_pai_nova">
        <title>Verify the IP on the server port (nova client)</title>
        <para>The following step shows you how to verify the IP address on the server port. In this case, the IP addresses
            should be <literal>192.168.7.250</literal> and <literal>fc01::7</literal>.</para>
        <procedure>
            <title>To verify the port on the server</title>
            <step>
                <para>Issue the following nova command.</para>
                <para><emphasis role="bold">Positional arguments:</emphasis></para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>The server ID. In this example, the ID is
                                    <literal>1ed5bc31-153d-4570-a361-92d5a02fd428</literal>.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para><programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
<prompt>$</prompt> nova list &lt;1ed5bc31-153d-4570-a361-92d5a02fd428&gt;</programlisting></para>

                <para><emphasis role="bold">Output:</emphasis></para>
                <para>The command returns the response, as shown in the following output:</para>
                <informalexample>
                    <screen><computeroutput><?db-font-size 75%?>
+-------------------------+------------------------------------------------------------------------------------+
| Property                | Value                                                                              |
+-------------------------+------------------------------------------------------------------------------------+
| OS-DCF:diskConfig       | AUTO                                                                               |
| OS-EXT-STS:power_state  | 1                                                                                  |
| OS-EXT-STS:task_state   | None                                                                               |
| OS-EXT-STS:vm_state     | active                                                                             |
| accessIPv4              | 10.23.233.124                                                                      |
| accessIPv6              | 2001:4801:787f:205:bccb:feff:fe00:189                                              |
| created                 | 2012-08-16T16:28:18Z                                                               |
| flavor                  | m1.mid (2)                                                                         |
| hostId                  | 0488142a8f859cb4020234cc235f8cd8a22bee126726025d70c0b9ba                           |
| id                      | 1ed5bc31-153d-4570-a361-92d5a02fd428                                               |
| image                   | cirros-0.3.0-x86_64-disk (82e72de5-6366-4217-8c87-a570a9b17e73)                    |
| metadata                | {}                                                                                 |
| name                    | ata                                                                                |
| Rack-4                  | fc01::7, 192.168.7.250,                                                            |
| private network         | 10.181.208.27                                                                      |
| progress                | 100                                                                                |
| public network          | 2001:db8:0:1:a8bb:ccff:fe00:12f, 10.13.20.20                                       |
| status                  | ACTIVE                                                                             |
| tenant_id               | 5831008                                                                            |
| updated                 | 2014-02-06T20:05:12Z                                                               |
| user_id                 | 207638                                                                             |
+-------------------------+------------------------------------------------------------------------------------+</computeroutput></screen>
                </informalexample>
            </step>
        </procedure>
        <sidebar security="internal">
            <para><emphasis role="bold">Next topic: </emphasis>
                <link xlink:href="security_groups.html">Use security groups to control traffic</link></para>
        </sidebar>
    </section>
</section>
