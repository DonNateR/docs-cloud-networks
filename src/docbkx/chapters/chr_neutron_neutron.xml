<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % common  SYSTEM "../../common/common.ent">
%common;
]>
<section xml:id="chr_neutron_neutron" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:raxm="http://docs.rackspace.com/api/metadata" version="5.0">
    <title>Configure host routes with neutron</title>
    <para>These sections walk you through configuring host routes by using the neutron client.</para>
    <sidebar>
        <para><emphasis role="bold">Start here: </emphasis><olink targetdoc="cn-gettingstarted"
                targetptr="neutron_create_network_chr_neutron">“Create a network (neutron client)”</olink></para>
    </sidebar>

    <section xml:id="neutron_create_network_chr_neutron">
        <title>Create a network (neutron client)</title>
        <para>After you create a network, copy its network ID. You use this ID to create a subnet and boot the server.</para>
        <procedure>
            <title>To create a network</title>
            <step>
                <para>Issue the following neutron client command, substituting your own values for the ones shown.</para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>The network name. In this example, the network name is <literal>Rackernet</literal>.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para><programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> neutron net-create Rackernet</programlisting></para>
                <para><emphasis role="bold">Positional argument:</emphasis></para>
                <para><emphasis role="bold">Output:</emphasis>
                </para>
                <para>The command returns the response, as shown in the following output:</para>
                <informalexample>
                    <screen><computeroutput><?db-font-size 75%?>
+----------------+--------------------------------------+
| Field          | Value                                |
+----------------+--------------------------------------+
| admin_state_up | True                                 |
| id             | a8fde776-e80f-47bb-a050-0c057d89afc3 |
| name           | Rackernet                            |
| shared         | False                                |
| status         | ACTIVE                               |
| subnets        |                                      |
| tenant_id      | 5831008                              |
+----------------+--------------------------------------+</computeroutput></screen>
                </informalexample>
            </step>
            <step>
                <para>Copy the <literal>id</literal> value from the output. You will use this value when you create a subnet,
                    provision your server, or perform other related activities. In this example, the ID is
                        <literal>a8fde776-e80f-47bb-a050-0c057d89afc3</literal>, but use the ID from your response.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis><olink targetdoc="cn-gettingstarted"
                    targetptr="neutron_create_subnet_chr_neutron">“Create a subnet with host routes (neutron
                client)”</olink></para>
        </sidebar>
    </section>

    <section xml:id="neutron_create_subnet_chr_neutron">
        <title>Create a subnet with host routes (neutron client)</title>
        <para>To create a subnet with host routes, you specify a network, an IP address, allocation pools, and host routes
            for your subnet.</para>
        <procedure>
            <title>To create a subnet with host routes</title>
            <step>
                <para>Issue the following cURL command, substituting your own values for the ones shown.</para>
                <para><emphasis role="bold">Positional argument:</emphasis></para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para><emphasis role="bold">ip-version</emphasis> The version of the subnet IP. In this example,
                                the version is <literal>4</literal>.</para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">allocation-pool</emphasis> The start and end addresses for one or
                                more allocation pools. In this example, there are two pools
                                    <literal>start=192.168.5.3,end=192.168.5.100</literal> and
                                    <literal>start=192.168.5.103,end=192.168.5.254</literal>.</para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">host-route</emphasis> A list of host route dictionaries for the
                                subnet. In this example, we used <literal>"destination": "1.1.1.0/24", "nexthop":
                                    "192.168.5.254"</literal>.</para>
                        </listitem>
                        <listitem>
                            <para><emphasis role="bold">tenant-id</emphasis> The tenant ID. In this example, we used the
                                tenant ID <literal>5831008</literal>.</para>
                        </listitem>
                        <listitem>
                            <para>The network ID or name. In this example, we used the network ID
                                    <literal>a8fde776-e80f-47bb-a050-0c057d89afc3</literal>.</para>
                        </listitem>
                        <listitem>
                            <para>The network CIDR. In this example, the CIDR is <literal>192.168.5.0/24</literal>.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para><programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> neutron subnet-create \
    --ip-version 4 \
    --allocation-pool start=192.168.5.3,end=192.168.5.100 \
    --allocation-pool start=192.168.5.103,end=192.168.5.254 \
    --host-route destination=1.1.1.0/24,nexthop=192.168.5.254 \
    --tenant-id 5831008 \
    a8fde776-e80f-47bb-a050-0c057d89afc3 192.168.5.0/24</programlisting></para>
                <para><emphasis role="bold">Output:</emphasis>
                </para>
                <para>The command returns the response, as shown in the following output:</para>
                <informalexample>
                    <screen><computeroutput><?db-font-size 75%?>
+------------------+-----------------------------------------------------------+
| Field            | Value                                                     |
+------------------+-----------------------------------------------------------+
| allocation_pools | {"start": "192.168.5.3", "end": "192.168.5.100"}          |
|                  | {"start": "192.168.5.103", "end": "192.168.5.254"}        |
| cidr             | 192.168.5.0/24                                            |
| dns_nameservers  |                                                           |
| enable_dhcp      |                                                           |
| gateway_ip       |                                                           |
| host_routes      | {"destination": "1.1.1.0/24", "nexthop": "192.168.5.254"} |
| id               | 98c1af30-05c9-4502-8b1f-9bffde843cba                      |
| ip_version       | 4                                                         |
| name             |                                                           |
| network_id       | a8fde776-e80f-47bb-a050-0c057d89afc3                      |
| tenant_id        | 5831008                                                   |
+------------------+-----------------------------------------------------------+</computeroutput></screen>
                </informalexample>
            </step>
            <step>
                <para>Note the host_routes attribute with the destination of <literal>1.1.1.0/24</literal> and the nexthop of
                        <literal>192.168.5.254</literal>.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis><olink targetdoc="cn-gettingstarted"
                    targetptr="neutron_boot_server_chr_nova">“Boot Server (nova client)”</olink></para>
        </sidebar>
    </section>

    <section xml:id="neutron_boot_server_chr_nova">
        <title>Boot a Server (nova client)</title>
        <para>The following step shows you how to boot server with the nova client, using the network ID of the network you
            created in the first step of this procedure. You need the following information:</para>
        <para>
            <itemizedlist>
                <listitem>
                    <para>The name of the new server. Use a name of your choice.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">image</emphasis> The image ID.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">flavor</emphasis> The flavor ID.</para>
                </listitem>
                <listitem>
                    <para><emphasis role="bold">nic</emphasis>The network ID of the network, which is
                            <literal>net-id=a8fde776-e80f-47bb-a050-0c057d89afc3</literal>. </para>
                </listitem>
            </itemizedlist>
        </para>
        <procedure>
            <title>To provision a server with a network</title>
            <step>
                <para>Issue the following nova client command:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 80%?>
<prompt>$</prompt> nova boot ata --image ffa476b1-9b14-46bd-99a8-862d1d94eb7a /
                        --flavor 2 --nic net-id=a8fde776-e80f-47bb-a050-0c057d89afc3</programlisting></para>

                <para>The operation returns information about the new server, as shown in the following example:</para>
                <para><informalexample>
                        <screen><computeroutput>
+-------------------------+-----------------------------------------------------------------+
| Property                | Value                                                           |
+-------------------------+-----------------------------------------------------------------+
| OS-DCF:diskConfig       | AUTO                                                            |
| OS-EXT-STS:power_state  | 0                                                               |
| OS-EXT-STS:task_state   | scheduling                                                      |
| OS-EXT-STS:vm_state     | building                                                        |
| accessIPv4              |                                                                 |
| accessIPv6              |                                                                 |
| adminPass               | ugZmn5Le6S8y                                                    |
| created                 | 2014-02-06T20:05:12Z                                            |
| flavor                  | m1.mid (2)                                                      |
| hostId                  |                                                                 |
| id                      | a1061a57-0136-4c29-aac1-8b1a646a3001                            |
| image                   | cirros-0.3.0-x86_64-disk (82e72de5-6366-4217-8c87-a570a9b17e73) |
| metadata                | {}                                                              |
| name                    | ata                                                             |
| progress                | 0                                                               |
| security_groups         | default                                                         |
| status                  | BUILD                                                           |
| tenant_id               | 5831008                                                         |
| updated                 | 2014-02-06T20:05:12Z                                            |
| user_id                 | 28be72f8fc5b45589c93f55274e459ce                                |
+-------------------------+-----------------------------------------------------------------+</computeroutput></screen>
                    </informalexample></para>
            </step>
            <step>
                <para>Copy the <literal>id</literal> value from the output for future reference. In this example, the ID is
                        <literal>a1061a57-0136-4c29-aac1-8b1a646a3001</literal>, but use the ID from your response.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis><olink targetdoc="cn-gettingstarted"
                    targetptr="neutron_verify_ip_chr_nova">Verify the IP on the server port (nova client)</olink></para>
        </sidebar>
    </section>

    <section xml:id="neutron_verify_ip_chr_nova">
        <title>Verify the IP on the server port (nova client)</title>
        <para>The following step shows you how to verify the IP address on the server port. In this case, the IP address
            should be <literal>192.168.5.3</literal> from the start of the allocation pool.</para>
        <procedure>
            <title>To verify the port on the server</title>
            <step>
                <para>Issue the following nova command:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
<prompt>$</prompt> nova list a1061a57-0136-4c29-aac1-8b1a646a3001</programlisting></para>
                <para><emphasis role="bold">Positional arguments:</emphasis></para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>The server ID. In this example, the ID is
                                    <literal>a1061a57-0136-4c29-aac1-8b1a646a3001</literal>.</para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para><emphasis role="bold">Output:</emphasis></para>
                <para>The command returns the response, as shown in the following output:</para>
                <informalexample>
                    <screen><computeroutput><?db-font-size 75%?>
+-------------------------+------------------------------------------------------------------------------------+
| Property                | Value                                                                              |
+-------------------------+------------------------------------------------------------------------------------+
| OS-DCF:diskConfig       | AUTO                                                                               |
| OS-EXT-STS:power_state  | 1                                                                                  |
| OS-EXT-STS:task_state   | None                                                                               |
| OS-EXT-STS:vm_state     | active                                                                             |
| accessIPv4              | 10.23.233.124                                                                      |
| accessIPv6              | 2001:4801:787f:205:bccb:feff:fe00:189                                              |
| created                 | 2012-08-16T16:28:18Z                                                               |
| flavor                  | 8GB Standard Instance (6)                                                          |
| hostId                  | 0488142a8f859cb4020234cc235f8cd8a22bee126726025d70c0b9ba                           |
| id                      | a1061a57-0136-4c29-aac1-8b1a646a3001                                               |
| image                   | cirros-0.3.0-x86_64-disk (82e72de5-6366-4217-8c87-a570a9b17e73)                    |
| metadata                | {}                                                                                 |
| name                    | ata                                                                                |
| Rackernet               | 192.168.5.3                                                                        |
| private network         | 10.181.192.114                                                                     |
| progress                | 100                                                                                |
| public network          | 2001:4801:787f:205:bccb:feff:fe00:189, 10.23.233.124                               |
| status                  | ACTIVE                                                                             |
| tenant_id               | 5831008                                                                            |
| updated                 | 2014-02-06T20:05:12Z                                                               |
| user_id                 | 207638                                                                             |
+-------------------------+------------------------------------------------------------------------------------+</computeroutput></screen>
                </informalexample>
            </step>
            <step>
                <para>Note the IP address on the <literal>public</literal> interface (in this case,
                        <literal>10.23.233.124</literal>). Use this to log in to the server in the next step.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis><olink targetdoc="cn-gettingstarted"
                    targetptr="neutron_verify_route_chr_sshneutron">Log in to the server and verify the route
                (ssh)</olink></para>
        </sidebar>
    </section>

    <section xml:id="neutron_verify_route_chr_sshneutron">
        <title>Log in to the server and verify the route (ssh)</title>
        <para>The following steps show you how to log in to the server and verify that the host route is configured correctly
            by using the command line.</para>
        <procedure>
            <title>To log in to the server and verify the host route</title>
            <step>
                <para>Issue the following command at the prompt, substituting your own values for the ones shown:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
                        <prompt>$</prompt> ssh root@10.23.233.124</programlisting></para>
                <para>The command returns output like the following example:
                    <programlisting language="bash"><?db-font-size 75%?>
The authenticity of host '10.23.233.124 (10.23.233.124)' can't be established.
RSA key fingerprint is 87:b6:8f:7a:44:80:a4:58:f8:9b:09:82:d4:b0:f9:bf.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added '10.23.233.124' (RSA) to the list of known hosts.
root@10.23.233.124's password:
                    </programlisting>
                </para>
            </step>
            <step>
                <para>Enter your password when prompted.</para>
            </step>
            <step>
                <para>Issue the following command at the prompt:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
                        <prompt>root@ata:~#</prompt> route</programlisting>
                </para>
                <para>The command returns output like the following example:
                    <programlisting language="bash"><?db-font-size 75%?>
Kernel IP routing table
Destination Gateway Genmask Flags Metric Ref Use Iface
default 10.23.233.1 0.0.0.0 UG 100 0 0 eth0
1.1.1.0 192.168.5.254 255.255.255.0 UG 0 0 0 eth2
10.23.233.0 * 255.255.255.0 U 0 0 0 eth0
10.181.192.0 * 255.255.248.0 U 0 0 0 eth1
192.168.5.0 * 255.255.255.0 U 0 0 0 eth2
                    </programlisting>
                </para>
                <para>Notice the route <literal>1.1.1.0</literal> with Gateway <literal>192.168.5.254</literal> in the
                    preceding output. That is what was expected.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next topic: </emphasis><olink targetdoc="cn-gettingstarted"
                    targetptr="provision_additional_ips">Provision additional IP address and dual-stack IP addresses on an
                    isolated network port</olink>
            </para>
        </sidebar>
    </section>
</section>
