<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section [
<!ENTITY % common  SYSTEM "../../common/common.ent">
%common;
]>
<section xml:id="bns_neutron_curl" xmlns="http://docbook.org/ns/docbook" xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:raxm="http://docs.rackspace.com/api/metadata" version="5.0">
    <title>Boot server with neutron API and cURL</title>
    <para>These sections walk you through creating a port for your network, listing the ports and showing the port details by
        using the neutron API. They also show the steps for provisioning a server with an attached port and for listing
        servers by using the nova-network API.</para>
<!--    <note>
        <para>If you prefer to attach the network directly to a new server without using a port, see <olink
                targetdoc="cn-gettingstarted" targetptr="bns_nova_nova">“Use nova-network API and nova-client”</olink> or
                <olink targetdoc="cn-gettingstarted" targetptr="bns_nova_curl">“Use nova-network API and cURL”</olink>. There
            are no neutron API operations for direct attachment of a network to the server without using ports.</para>
    </note>-->
    <sidebar>
        <para><emphasis role="bold">Start here: </emphasis><olink targetdoc="cn-gettingstarted"
                targetptr="neutron_create_port_curl">“Create a port (neutron API/cURL)”</olink></para>
    </sidebar>

    <section xml:id="neutron_create_port_curl">
        <title>Create a port (neutron API/cURL)</title>
        <para>Before you can attach port and network to a server, you need to create the port.</para>
        <para>To create a network, you specify a name for your port and the network name. After you create a port, copy its
            port ID. Use this ID to attach it to a new server.</para>
        <procedure>
            <title>To create a port</title>
            <step>
                <para>Issue the following cURL command:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 70%?>
                            <prompt>$</prompt> curl -s https://dfw.servers.api.rackspacecloud.com/v2.0/ports \
       -X POST \
       -H "Content-Type: application/json" \
       -H "Accept: application/json" \
       -H "X-Auth-Token: $token" \
       -d '{"port": {"name":"newport","network_id": "29f52c7e-6efd-4335-a14a-db77d32a2555"}}| python -m json.tool</programlisting></para>
                <para>In this cURL command, you specify several options. For information about options, see <olink
                        targetdoc="cn-gettingstarted" targetptr="curl_options">Table 2, “cURL Command-Line
                    Options”</olink>.</para>
                <para><emphasis role="bold">Output:</emphasis>
                </para>
                <para>The operation returns the response body, as shown in the following JSON response:
                    <programlisting language="json"><?db-font-size 75%?>
{
   "port":[
      {
         "status":"DOWN",
         "binding:host_id":null,
         "name":"newport",
         "admin_state_up":true,
         "network_id":"29f52c7e-6efd-4335-a14a-db77d32a2555",
         "tenant_id":"53501b3c25d34f8ea293c03298caed60",
         "binding:vif_type":"ovs",
         "device_owner":"",
         "binding:capabilities":{
            "port_filter":true
         },
         "mac_address":"fa:16:3e:a6:48:c4",
         "fixed_ips":[
            {"subnet_id": "23e3059e-4f39-4f7f-8cf2-c326e5de6c37", 
            "ip_address": "120.1.2.4"} 
         ],
         "id":"c23c2fff-c07f-4af0-bc37-8ad883231f7c",
         "security_groups":[
            "7e768af1-f9e9-431e-823d-9477e593e345"
         ],
         "device_id":""
      }
   ]
}

                    </programlisting></para>
            </step>
            <step>
                <para>Copy the ID value from the output. You will use this value when you provision your server. In this
                    example, the port ID is <literal>c23c2fff-c07f-4af0-bc37-8ad883231f7c</literal>, but use the value from
                    your response.</para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step:</emphasis><olink targetdoc="cn-gettingstarted"
                    targetptr="neutron_list_ports_curl">“List ports (neutron API/cURL)”</olink></para>
        </sidebar>
    </section>

    <section xml:id="neutron_list_ports_curl">
        <title>List ports (neutron API/cURL)</title>
        <para>After you create a port, you may want to list ports to confirm creation.</para>
        <para>The following steps shows you how to list networks and subnets using cURL.</para>
        <procedure>
            <title>To list ports</title>
            <step>
                <para>Issue the following cURL command: <programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
                        <prompt>$</prompt> curl https://dfw.servers.api.rackspacecloud.com/v2.0/$account/ports \
       -X GET -H "X-Auth-Token: $token" | python -m json.tool</programlisting>
                    <emphasis role="bold">Output:</emphasis>
                </para>
                <para>The API operation returns a response body as shown in the following output:
                    <programlisting language="json"><?db-font-size 75%?>
{
   "ports":[
      {
         "status":"ACTIVE",
         "name":"newport",
         "admin_state_up":true,
         "network_id":"29f52c7e-6efd-4335-a14a-db77d32a2555",
         "tenant_id":"53501b3c25d34f8ea293c03298caed60",
         "binding:vif_type":"ovs",
         "device_owner":"compute:None",
         "binding:capabilities":{
            "port_filter":false
         },
         "mac_address":"fa:16:3e:a6:48:c4",
         "fixed_ips":[
            {
               "subnet_id":"23e3059e-4f39-4f7f-8cf2-c326e5de6c37",
               "ip_address":"120.1.2.4"
            }
         ],
         "id":"c23c2fff-c07f-4af0-bc37-8ad883231f7c",
         "device_id":"f288bb5f-920d-4276-8345-2c0319c16f58"
      },
      {
         "status":"DOWN",
         "name":"",
         "admin_state_up":true,
         "network_id":"29f52c7e-6efd-4335-a14a-db77d32a2555",
         "tenant_id":"53501b3c25d34f8ea293c03298caed60",
         "binding:vif_type":"ovs",
         "device_owner":"network:router_gateway",
         "binding:capabilities":{
            "port_filter":false
         },
         "mac_address":"fa:16:3e:c1:a5:6a",
         "fixed_ips":[
            {
               "subnet_id":"23e3059e-4f39-4f7f-8cf2-c326e5de6c37",
               "ip_address":"120.1.2.3"
            }
         ],
         "id":"d272f4bf-06a7-419e-9f22-5ee4a3cbd7c2",
         "device_id":"0dc517bf-9169-4aa6-88b7-569219962881"
      },
      {
         "status":"ACTIVE",
         "name":"",
         "admin_state_up":true,
         "network_id":"29f52c7e-6efd-4335-a14a-db77d32a2555",
         "tenant_id":"53501b3c25d34f8ea293c03298caed60",
         "binding:vif_type":"ovs",
         "device_owner":"network:router_interface",
         "binding:capabilities":{
            "port_filter":false
         },
         "mac_address":" fa:16:3e:6e:dc:9a",
         "fixed_ips":[
            {
               "subnet_id":"23e3059e-4f39-4f7f-8cf2-c326e5de6c37",
               "ip_address":"120.1.2.2"
            }
         ],
         "id":"f4a83984-8b96-4701-8ddd-a464caf4b14e",
         "device_id":"0dc517bf-9169-4aa6-88b7-569219962881"
      }
   ]
}
                    </programlisting>
                </para>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis><olink targetdoc="cn-gettingstarted"
                    targetptr="neutron_create_server_curl">“Provision a server by attaching a port with an isolated network
                    (neutron API/cURL)”</olink></para>
        </sidebar>
    </section>

    <!--Writer:  Keep this sections in sync with xml:id="nova_create_server_curl". Content is basically same but command, 
        title, and sidebar are different-->
    <section xml:id="neutron_create_server_curl">
        <title>Provision a server with a port and an isolated network (neutron API/cURL)</title>
        <para>To create your new server and attach a port with an isolated network, you need the following
            information:</para>
        
        <xi:include href="net_bns_provserv_all.xml"
            xpointer="xmlns(db=http://docbook.org/ns/docbook)
            xpath(//*[@xml:id = 'bns_ps_params_neutron']/*[not(self::db:title)])">
            <xi:fallback>
                <para>Missing content here. Please let us know by making a DISQUS comment.</para>
            </xi:fallback>
        </xi:include>
        
        <xi:include href="net_bns_provserv_all.xml"
            xpointer="xmlns(db=http://docbook.org/ns/docbook)
            xpath(//*[@xml:id = 'bns_ps_notes']/*[not(self::db:title)])">
            <xi:fallback>
                <para>Missing content here. Please let us know by making a DISQUS comment.</para>
            </xi:fallback>
        </xi:include>
        
        <procedure>
            <title>To provision a server and attach a port with a network by using JSON</title>
            <step>
                <para>Issue the following cURL
                    command:<programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
                            <prompt>$</prompt> curl https://dfw.servers.api.rackspacecloud.com/v2/$account/servers \
         -X POST \
         -H "X-Auth-Project-Id: $account" \
         -H "Content-Type: application/json" \
         -H "Accept: application/json" \
         -H "X-Auth-Token: $token" \
         -d '{"server": {"name": "ServerAmp", "imageRef": "82e72de5-6366-4217-8c87-a570a9b17e73", "flavorRef": "1", "max_count": 1, "min_count": 1, "port": {"id": "c23c2fff-c07f-4af0-bc37-8ad883231f7c"}}}' \
         | python -m json.tool</programlisting></para>
                <!--output example-->
                <xi:include href="net_bns_provserv_all.xml"
                    xpointer="xmlns(db=http://docbook.org/ns/docbook)
                    xpath(//*[@xml:id = 'bns_ps_output_curl']/*[not(self::db:title)])">
                    <xi:fallback>
                        <para>Missing content here. Please let us know by making a DISQUS comment.</para>
                    </xi:fallback>
                </xi:include>
                <!--<para><emphasis role="bold">Output:</emphasis> The API operation returns information about the new server, as
                    shown in the following output:</para>
                <programlisting language="json"><?db-font-size 75%?>
{
    "server": {
        "OS-DCF:diskConfig": "MANUAL", 
        "adminPass": "4PkrqfdmuuKy", 
        "id": "537805b0-7a04-4bbc-8040-812527b024bc", 
        "links": [
            {
                "href": "https://dfw.servers.api.rackspacecloud.com/v2/010101/servers/537805b0-7a04-4bbc-8040-812527b024bc", 
                "rel": "self"
            }, 
            {
                "href": "https://dfw.servers.api.rackspacecloud.com/010101/servers/537805b0-7a04-4bbc-8040-812527b024bc", 
                "rel": "bookmark"
            }
        ]
    }
}    
                    </programlisting>-->
            </step>
        </procedure>
        <!-- Commented out since neutron doesn't use xml at all, it made sense to not show the xml here, even though
            this is nova-network API and xml does work.  Unhide at will -->
        <!--        <procedure>
            <title>To provision a server and attach a port with a network by using XML</title>
            <step>
                <para>Issue the following cURL
                    command:<programlisting language="bash" role="gutter: false"><?db-font-size 75%?>
                            <prompt>$</prompt> curl -i https://dfw.servers.api.rackspacecloud.com/v2/$account/servers.xml \
        -X POST \
        -H "X-Auth-Project-Id: $account" \
        -H "Content-Type: application/xml" \
        -H "Accept: application/xml" \
        -H "X-Auth-Token: $token" \
        -d '&lt;?xml version="1.0" encoding="UTF-8"?>&lt;server xmlns="http://docs.openstack.org/compute/api/v1.1" imageRef="82e72de5-6366-4217-8c87-a570a9b17e73" flavorRef="1" name="ServerAmp">&lt;ports>&lt;id>c23c2fff-c07f-4af0-bc37-8ad883231f7c>&lt;/server>'</programlisting></para>
                <para><emphasis role="bold">Output:</emphasis> The API operation returns information about the new
                    server, as shown in the following output:</para>
                <programlisting language="xml"><?db-font-size 75%?>
&lt;server>
    xmlns:OS-DCF="http://docs.openstack.org/compute/ext/disk_config/api/v1.1"
    xmlns:atom="http://www.w3.org/2005/Atom"
    xmlns="http://docs.openstack.org/compute/api/v1.1"
    id="fbcebd8c-5b4f-4087-a778-f5a6ffc4530f" 
    adminPass="K3kviaHwhKqS"
    OS-DCF:diskConfig="AUTO">
    &lt;metadata/>
    &lt;atom:link
        href="https://dfw.servers.api.rackspacecloud.com/v2/010101/servers/fbcebd8c-5b4f-4087-a778-f5a6ffc4530f"
        rel="self"/>
    &lt;atom:link
        href="https://dfw.servers.api.rackspacecloud.com/010101/servers/fbcebd8c-5b4f-4087-a778-f5a6ffc4530f"
        rel="bookmark"/>
&lt;/server>
                    </programlisting>
            </step>
        </procedure>-->
        <sidebar>
            <para>
                <emphasis role="bold">Next step:</emphasis>
                <olink targetdoc="cn-gettingstarted" targetptr="neutron_show_port_curl">“Show port details (neutron
                    API/cURL)”</olink>
            </para>
        </sidebar>
    </section>

    <section xml:id="neutron_show_port_curl">
        <title>Show port details (neutron API/cURL)</title>
        <para>The following steps shows you how to view details for a port using cURL.</para>
        <procedure>
            <title>To show information for a specified port ID</title>
            <step>
                <para>Issue the following cURL command:
                    <programlisting language="bash" role="gutter: false"><?db-font-size 65%?>
                            <prompt>$</prompt> curl https://dfw.servers.api.rackspacecloud.com/v2.0/$account/ports/c23c2fff-c07f-4af0-bc37-8ad883231f7c \
        -X GET \
        -H "X-Auth-Project-Id: $account" \
        -H "Accept: application/json" \
        -H "Content-Type: application/json"\
        -H "X-Auth-Token: $token" | python -m json.tool</programlisting></para>
                <para><emphasis role="bold">Positional argument:</emphasis></para>
                <para>
                    <itemizedlist>
                        <listitem>
                            <para>The ID of the network for which you want to show information. To determine the network ID,
                                issue a <command>neutron</command>
                                <option>network-list</option> command. </para>
                        </listitem>
                    </itemizedlist>
                </para>
                <para><emphasis role="bold">Output:</emphasis></para>
                <para>The API operation returns a response body as shown in the following output:</para>

                <programlisting language="json"><?db-font-size 75%?>
{
   "port":[
      {
         "status":"ACTIVE",
         "name":"newport",
         "admin_state_up":true,
         "network_id":"29f52c7e-6efd-4335-a14a-db77d32a2555",
         "tenant_id":"53501b3c25d34f8ea293c03298caed60",
         "binding:vif_type":"ovs",
         "device_owner":"compute:None",
         "binding:capabilities":{
            "port_filter":false
         },
         "mac_address":"fa:16:3e:a6:48:c4",
         "fixed_ips":[
            {
               "subnet_id":"23e3059e-4f39-4f7f-8cf2-c326e5de6c37",
               "ip_address":"120.1.2.4"
            }
         ],
         "id":"c23c2fff-c07f-4af0-bc37-8ad883231f7c",
         "device_id":"537805b0-7a04-4bbc-8040-812527b024bc"
      }
   ]
}
                </programlisting>
            </step>
        </procedure>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis><olink targetdoc="cn-gettingstarted"
                    targetptr="neutron_list_server_curl">“List servers and attached networks (nova-network
                API/cURL)”</olink></para>
        </sidebar>
    </section>

    <!--The following section to list servers is same for neutron/neutron and nova-network-nova so it is linked-->
    <section xml:id="neutron_list_server_curl">
        <title>List servers and attached networks (nova-network API/cURL)</title>
        <xi:include href="net_bns_listserv_curl.xml"
            xpointer="xmlns(db=http://docbook.org/ns/docbook)
            xpath(//*[@xml:id = 'bns_listserv_curl']/*[not(self::db:title)])">
            <xi:fallback>
                <para>Missing content here. Please let us know by making a DISQUS comment.</para>
            </xi:fallback>
        </xi:include>
        <sidebar>
            <para><emphasis role="bold">Next step: </emphasis><olink targetdoc="cn-gettingstarted" targetptr="attach_net"
                    >Attach your network to an existing server</olink></para>
        </sidebar>
    </section>
</section>
